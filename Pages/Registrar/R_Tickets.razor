@page "/RegistroTickets"
@page "/RegistroTickets/{TicketsId:int}"
@inject TicketsBLL ticketBll
@using RegistroDTickets.BLL;

<PageTitle>Registro de Tickets </PageTitle>


<h3> <center>Registro de Tickets</center></h3>

<EditForm Model="tickets" OnValidSubmit="Guardar" method="post" class="form-group">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="TicketsId">Ticket ID:</label>
        <div class="input-group">
            <InputNumber @bind-Value="tickets.TicketsId" type="number" name="TicketsId" class="form-control" id="TicketsId" min="1" required />
        </div>
    </div>

    <div class="form-group">
        <label for="ClientesId">ID de Cliente:</label>
        <div class="input-group">
            <InputNumber @bind-Value="tickets.ClientesId" type="number" name="ClientesId" class="form-control" id="ClientesId" min="1" required />
        </div>
    </div>

    <div class="form-group">
        <label for="SistemaId">ID del Sistema:</label>
        <InputNumber @bind-Value="tickets.SistemaId" type="number" name="SistemaId" class="form-control" id="SistemaId" 
            placeholder="Especifica en cual de los 4 sistema se encuentra" min="1" max="4" required />
    </div>

    <div class="form-group">
        <label for="PrioridadId">ID de Prioridad:</label>
        <InputNumber @bind-Value="tickets.PrioridadId" type="number" name="PrioridadId" class="form-control" id="PrioridadId" min="1" required />
    </div>

    <div class="form-group">
        <label for="Fecha">Fecha:</label>
        <InputDate @bind-Value="tickets.Fecha" class="form-control" id="Fecha" required />
    </div>

    <div class="form-group">
        <label for="SolicitadoPor">Solicitado Por:</label>
        <InputText @bind-Value="tickets.SolicitadoPor" type="text" name="SolicitadoPor" class="form-control" 
            placeholder="Nombre de la persona" id="SolicitadoPor" required/>
    </div>

    <div class="form-group">
        <label for="Asunto">Asunto:</label>
        <InputText @bind-Value="tickets.Asunto" type="text" name="Asunto" class="form-control" id="Asunto" required />
    </div>

    <div class="form-group">
        <label for="Descripcion">Descripción:</label>
        <InputTextArea @bind-Value="tickets.Descripcion" name="Descripcion" class="form-control" id="Descripcion" rows="3" required></InputTextArea >
    </div>

    <button type="submit" @onclick="Guardar" class="btn btn-primary">Guardar</button>
</EditForm>

<p>@Mensaje</p>

@code {
    [Parameter]
    public int TicketsId { get; set; }

    public Tickets tickets { get; set; } = new Tickets();
    private string Mensaje = ""; // para mostrar un mensaje

    public bool TicketIdRepe = false;
    public bool SistemaIdRepe = false;
    public bool PrioriIdRpe = false;
    public bool ClienteIdRepe = false;

    protected override void OnInitialized()
    {
        if(TicketsId > 0)
        {
            this.tickets.TicketsId = TicketsId;
            this.Buscar();
        }
    }

    void Buscar()
    {
        var ticketEncontrado = ticketBll.Buscar(tickets.TicketsId);
        if(ticketEncontrado != null)
        {
            this.tickets = ticketEncontrado;
        }
        else
        {
            this.tickets = new Tickets();

            Mensaje = "No se encontro ningun ticket";
        }

    }

    void Nuevo()
    {
        this.tickets = new Tickets();
    }


    public bool EsInvalido()
    {
        TicketIdRepe = ticketBll.GetList(t => t.TicketsId == tickets.TicketsId).Any();
        SistemaIdRepe = ticketBll.GetList(s => s.SistemaId == tickets.SistemaId).Any();
        PrioriIdRpe = ticketBll.GetList(P => P.PrioridadId == tickets.PrioridadId).Any();
        ClienteIdRepe = ticketBll.GetList(c => c.ClientesId == tickets.ClientesId).Any();


        return TicketIdRepe || SistemaIdRepe || PrioriIdRpe || ClienteIdRepe;
    }

    void Guardar()
    {
        if (!EsInvalido())
        {
            Mensaje = "Se guardo el ticket correctamente";
            return;
        }

        if (ticketBll.Guardar(this.tickets))
        {
            Mensaje = "Se guardo el ticket correctamente";
            this.Nuevo();
        }
        else
        {
            Mensaje = "Error al guardar el ticket";
        }
    }


    void Eliminar()
    {
        if (ticketBll.Eliminar(tickets))
            Mensaje = "El ticket fue eliminado";
        else
            Mensaje = "No se pudo eliminar el ticket";
        this.tickets = new Tickets();
    }
}
